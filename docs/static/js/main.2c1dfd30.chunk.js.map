{"version":3,"sources":["pages/WordsClassTool.js","pages/WordsSelfChecker.js","App.js","serviceWorker.js","index.js"],"names":["WordCell","item","colors","subkeyword","className","cardBG","style","width","label","target","href","url","encodeURI","word","onClick","e","stopPropagation","TypeCell","selectedType","type","CategorySum","wordList","category","selectBG","textColor","filter","v","length","TypeList","typeList","onSelectType","value","map","key","CheckMark","height","viewBox","d","fill","checkMark","stroke","strokeMiterlimit","pointerEvents","Container","title","children","onClickDownload","headerBG","selectedCategory","WordCard","answer","WordList","categoryLabels","onSelectHandler","i","calcResult","w","y","Object","keys","a","cat","forEach","labels","total","result","data","parseInt","checkerKey","React","useState","setSelectedCategory","setAnswer","canvasEl","useRef","chartRef","localStorageKey","useEffect","ctx","current","getContext","resultData","destroy","Chart","datasets","borderWidth","backgroundColor","borderColor","pointBorderWidth","pointHoverBorderWidth","pointBorderColor","pointRadius","borderJoinStyle","options","responsive","legend","display","scale","angleLines","ticks","min","max","suggestedMin","suggestedMax","fontSize","gridLines","lineWidth","circular","pointLabels","hover","axis","tooltips","callbacks","tooltipItem","index","updateChart","JSON","parse","localStorage","getItem","err","onSelectCategoryHander","r","filename","n","Date","getFullYear","slice","getMonth","getDate","nowTime","date","resultHash","reduce","c","words","point","blob","Blob","stringify","URL","createObjectURL","link","document","createElement","download","click","revokeObjectURL","downloadResultJSON","ref","onChange","preventDefault","xmlns","setItem","withRouter","history","categoryURL","match","console","log","wordType","params","setSelectedType","wordData","setWordData","typeData","setTypeData","loadTypeData","axios","post","list","loadWordData","setWordType","some","encodeURIComponent","then","push","App","path","WordsSelfChecker","DataScienceWordList","DataScienceTypeList","WebTechWordList","WebTechTypeList","ProgrammingWordList","ProgrammingTypeList","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2c1dfd30.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst WordCell = ({\n  item,\n  colors,\n  subkeyword,\n}) => {\n  const textColor = (category) => {\n    return colors.cardBG;\n  }\n  return (\n    <div className=\"relative inline-block align-middle\">\n      <div className={`flex items-center m-2 h-24 ${textColor(item)} rounded-lg shadow`} style={{ width: \"6.5rem\", }}>\n        <div className=\"block w-full text-gray-700\">\n          <p className=\"select-none absolute top-0 m-2 text-xs\">{item.label}</p>\n          <p className=\"select-none font-bold text-sm text-center\">\n            <a className=\"underline\"\n              target=\"words-self-checker\"\n              href={item.url?item.url:\"https://www.google.com/search?q=\"+encodeURI(item.word+' '+subkeyword)}\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n            >{ item.word }</a>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst TypeCell = ({\n  item,\n  selectedType,\n  onClick,\n  colors,\n}) => {\n  const textColor = () => {\n    if (selectedType === item.type) return colors.cardBG;\n    return 'bg-gray-200';\n  }\n  return (\n    <div className=\"relative inline-block align-middle\">\n      <div className={`flex items-center m-2 h-16 ${textColor()} rounded-lg shadow`} style={{ width: \"3.5rem\", }} onClick={onClick}>\n        <div className=\"block w-full text-gray-700\">\n          <p className=\"select-none font-bold text-sm text-center\">\n            { item.label }\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst CategorySum = ({\n  wordList,\n  label,\n  category,\n  onClick,\n  selectedType,\n  colors,\n}) => {\n  const textColor = (category) => {\n    return selectedType===category?`text-white ${colors.selectBG}`:'text-gray-500 bg-transparent';\n  }\n  return (\n    <div className={`select-none flex text-sm hover:${colors.selectBG} hover:text-white text-white font-bold py-1 px-2 rounded ${textColor(category)}`} onClick={onClick}>\n      <div className=\"flex-1 my-2\"> {label}:{ wordList.filter( v => (typeof(v.type) === 'undefined' && category === 'null') ||  v.type === category || category === 'all' ).length } </div>\n    </div>\n  )\n}\n\nconst TypeList = ({\n  wordList,\n  typeList,\n  selectedType,\n  onSelectType,\n  colors,\n}) => {\n  return (\n    <div className=\"hidden md:flex justify-center my-2\">\n      <CategorySum\n        wordList={wordList}\n        label=\"全て\"\n        category=\"all\"\n        selectedType={selectedType}\n        onClick={() => onSelectType({ target: { value: 'all' }})}\n        colors={colors}\n      />\n      <CategorySum\n        wordList={wordList}\n        label=\"なし\"\n        category=\"null\"\n        selectedType={selectedType}\n        onClick={() => onSelectType({ target: { value: 'null' }})}\n        colors={colors}\n      />\n      {\n        typeList.map( item => {\n          return (\n            <CategorySum\n              key={item.type}\n              wordList={wordList}\n              label={item.label}\n              category={item.type}\n              selectedType={selectedType}\n              onClick={() => onSelectType({ target: { value: item.type }})}\n              colors={colors}\n            />\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default function({\n  history,\n  category,\n  categoryURL,\n  match,\n  colors= {\n    cardBG: 'bg-blue-200',\n    selectBG: 'bg-blue-500',\n  },\n  subkeyword=\"プログラミング\",\n}) {\n  console.log(match);\n  const { wordType } = match.params;\n  const [selectedType, setSelectedType] = React.useState('all');\n  const [wordData, setWordData] = React.useState([]);\n  const [typeData, setTypeData] = React.useState([]);\n\n  React.useEffect(() => {\n    setSelectedType(wordType?wordType:'all');\n  }, [wordType]);\n\n  const loadTypeData = async () => {\n    const list = await axios.post(`/typeData/${category}`);\n    setTypeData(list.data);\n  }\n  const loadWordData = async () => {\n    const list = await axios.post(`/wordData/${category}`);\n    setWordData(list.data);\n  }\n  const setWordType = async (word, type) => {\n      const w = [ ...wordData ];\n      w.some( w => {\n      if (w.word === word) {\n        w.type = type;\n        return true;\n      }\n      return false;\n    })\n    setWordData(w);\n    axios.post(`/wordType/${category}/${encodeURIComponent(word)}/${type}`).then();\n  }\n\n  React.useEffect(() => {\n    loadTypeData();\n    loadWordData();\n  }, []);\n\n  const onSelectType = (e) => {\n    history.push(`/${categoryURL}/tool/${e.target.value}`);\n    setSelectedType(e.target.value);\n  }\n\n  const onClickTypeCellHandler = (word, type) => {\n    return (e) => {\n      setWordType(word, type);\n      e.preventDefault();\n    }\n  }\n\n  return (\n    <>\n      <TypeList\n        wordList={wordData}\n        typeList={typeData}\n        selectedType={selectedType}\n        onSelectType={onSelectType}\n        colors={colors}\n      />\n      {\n        wordData.filter(w => {\n          if (selectedType === 'null') {\n            return (typeof(w.type) === 'undefined')\n          }\n          if (selectedType === 'all') return true;\n          if (selectedType === w.type) return true;\n          return false;\n        }).map( (w, i) => {\n          return (\n            <div key={w.word} className=\"block border-4\">\n              <WordCell\n                item={w}\n                colors={colors}\n                subkeyword={subkeyword}\n              />\n              {\n                typeData.map( (v, i) => (\n                  <TypeCell\n                    key={v.label}\n                    item={v}\n                    selectedType={w.type}\n                    onClick={onClickTypeCellHandler(w.word, v.type)}\n                    colors={colors}\n                  />\n                ))\n              }\n            </div>\n          )\n        })\n      }\n    </>\n  )\n}\n","import React from 'react';\nimport Chart from 'chart.js';\n\nfunction CheckMark({colors}) {\n  return (\n    <svg width=\"24px\" height=\"26px\" viewBox=\"-0.5 -0.5 44 51\">\n      <path d=\"M 0.18 34.19 C 0.63 32.5 1.77 31.08 3.31 30.3 C 4.85 29.52 6.64 29.44 8.24 30.09 C 10.57 31.24 12.37 33.26 13.27 35.72 C 17.43 23.7 23.75 12.58 31.91 2.92 C 34.22 0.78 37.46 0 40.47 0.87 C 41.23 0.99 41.89 1.51 42.19 2.24 C 42.5 2.96 42.42 3.8 41.98 4.45 C 30.89 17.2 22.64 32.24 17.81 48.54 C 14.96 50 11.59 50 8.74 48.54 C 6.59 43.67 3.7 39.17 0.18 35.21 C 0 34.89 0 34.5 0.18 34.19 Z\"\n        fill={colors.checkMark}\n        stroke={colors.checkMark}\n        strokeMiterlimit=\"10\"\n        pointerEvents=\"all\"\n      />\n    </svg>\n  )\n}\n\nfunction Container({\n  title,\n  children,\n  onClickDownload,\n  colors,\n}) {\n  return (\n    <div className=\"container mx-auto\">\n      <div className={`flex items-center justify-between flex-wrap ${colors.headerBG} p-3`}>\n        <div className={`flex items-center flex-shrink-0 text-white`}>\n          <span className=\"font-semibold md:text-xl tracking-tight break-words\">{title}</span>\n        </div>\n        <div className=\"w-full block flex-grow md:flex md:items-center md:w-auto\">\n          <div className=\"text-sm md:flex-grow\"></div>\n          <div>\n            <div\n               className=\"inline-block text-sm px-4 py-2 leading-none border rounded text-white border-white hover:border-transparent hover:text-teal-500 hover:bg-white mt-4 md:mt-0\"\n               onClick={onClickDownload}\n            >Download Result</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"inset-0\">\n        { children }\n      </div>\n    </div>\n  )\n}\n\nconst CategorySum = ({\n  wordList,\n  label,\n  category,\n  onClick,\n  selectedCategory,\n  colors,\n}) => {\n  const textColor = (category) => {\n    return selectedCategory===category?`text-white ${colors.selectBG}`:'text-gray-500 bg-transparent';\n  }\n  return (\n    <div className={`select-none flex text-sm hover:${colors.selectBG} hover:text-white text-white font-bold py-1 px-2 rounded ${textColor(category)}`} onClick={onClick}>\n      <div className=\"flex-1 my-2\"> {label}:{ wordList.filter( v => v.type === category || category === 'all' ).length } </div>\n    </div>\n  )\n}\n\nconst WordCard = ({\n  item,\n  answer,\n  onClick,\n  colors,\n  subkeyword,\n}) => {\n  const textColor = (category) => {\n    if (answer === 1) return colors.cardBG;\n    return 'bg-gray-200';\n  }\n  return (\n    <div className=\"relative inline-block align-middle\">\n      <div className={`flex items-center m-2 h-24 ${textColor(item)} rounded-lg shadow`} style={{ width: \"6.5rem\", }} onClick={onClick}>\n        <div className=\"block w-full text-gray-700\">\n          <p className=\"select-none absolute top-0 m-2 text-xs\">{item.label}</p>\n          <p className=\"select-none font-bold text-sm text-center\">\n            <a className=\"underline\"\n              target=\"words-self-checker\"\n              href={item.url?item.url:\"https://www.google.com/search?q=\"+encodeURI(item.word+` ${subkeyword}`)}\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n            >{ item.word }</a>\n          </p>\n          {\n            (answer === 1)?(<p className=\"select-none absolute bottom-0 right-0 m-4\">\n              <CheckMark colors={colors} />\n            </p>):null\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst WordList = ({\n  wordList,\n  answer,\n  category,\n  categoryLabels,\n  onSelectHandler,\n  colors,\n  subkeyword,\n}) => {\n  return (\n    <>\n    {\n      wordList.filter(v => {\n        if (category === 'null') {\n            return (typeof(v.type) === 'undefined')\n        }\n        if (category === 'all') return true;\n        if (category === v.type) return true;\n        return false;\n      }).map( (v, i) => {\n        const item = { ...v };\n        item.label = categoryLabels[item.type];\n        return (\n          <WordCard\n            key={i}\n            item={item}\n            answer={answer[v.word]}\n            onClick={onSelectHandler(v)}\n            colors={colors}\n            subkeyword={subkeyword}\n          />\n        )\n      })\n    }\n    </>\n  )\n}\n\nconst calcResult = (w, answer, typeList) => {\n  const y = Object.keys(answer).filter( a => answer[a] === 1 );\n  const sum = (category) => {\n    return w.filter( v => v.type === category ).length\n  }\n  const cat = {};\n  w.forEach( v => { cat[v.word] = v.type } );\n  const labels = typeList.map( v => v.label );\n  const keys = typeList.map( v => v.type );\n  const total = keys.map( key => sum(key) );\n  const result = {};\n  keys.forEach( key => {\n    result[key] = 0;\n  })\n  y.forEach( w => {\n    if (!result[cat[w]]) result[cat[w]] = 0;\n    result[cat[w]] ++;\n  });\n  return {\n    labels,\n    data: keys.map( (key, i) => parseInt(result[key] * 100 / total[i]) ),\n  }\n}\n\nexport default function({\n  wordList,\n  typeList,\n  checkerKey,\n  title,\n  colors= {\n    cardBG: 'bg-blue-200',\n    headerBG: 'bg-blue-500',\n    selectBG: 'bg-blue-500',\n    checkMark: '#4299E1',\n  },\n  subkeyword=\"プログラミング\",\n}) {\n  const [selectedCategory, setSelectedCategory] = React.useState('all');\n  const [answer, setAnswer] = React.useState({});\n  const canvasEl = React.useRef(null);\n  const chartRef = React.useRef(null);\n  const localStorageKey = `self-checker-answer:${checkerKey}`;\n\n  const updateChart = (answer, wordList, typeList) => {\n    const ctx = canvasEl.current.getContext('2d');\n\n    const resultData = calcResult(wordList, answer, typeList);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n    }\n    chartRef.current = new Chart(ctx, {\n      type: 'radar',\n      data: {\n        labels: resultData.labels,\n        datasets: [{\n          data: resultData.data,\n          borderWidth: 4,\n          backgroundColor: '#33A2E940',\n          borderColor: '#33A2E9',\n          pointBorderWidth: 2,\n          pointHoverBorderWidth: 2,\n          pointBorderColor: 'white',\n          pointRadius: 4,\n          borderJoinStyle: 'round',\n          // label: 'hello',\n        }]\n      },\n      options: {\n        responsive: false,\n        legend: {\n          display: false,\n        },\n        scale: {\n          angleLines: {\n            display: false,\n          },\n          ticks: {\n            min: 0,\n            max: 100,\n            suggestedMin: 0,\n            suggestedMax: 50,\n            fontSize: 18,\n          },\n          gridLines: {\n            lineWidth: 2,\n            circular: false,\n          },\n          pointLabels: {\n            fontSize: 15,\n          },\n        },\n        hover: {\n          axis: 'index'\n        },\n        tooltips: {\n          callbacks: {\n            title: function(tooltipItem, data) {\n              return resultData.labels[tooltipItem[0].index];\n            },\n          },\n        },\n      }\n    });\n  }\n\n  React.useEffect(() => {\n    updateChart(answer, wordList, typeList);\n  }, [answer, wordList, typeList]);\n\n  React.useEffect(() => {\n    try {\n      const a = JSON.parse(localStorage.getItem(localStorageKey));\n      setAnswer(a?a:{});\n    } catch(err) {\n    }\n  }, []);\n\n  const onSelectHandler = (item) => {\n    return (e) => {\n      const a = { ...answer };\n      if (!a[item.word]) {\n        a[item.word] = 1;\n      } else {\n        a[item.word] = 0;\n      }\n      localStorage.setItem(localStorageKey, JSON.stringify(a));\n      setAnswer(a);\n    }\n  }\n\n  const onSelectCategory = (e) => {\n    setSelectedCategory(e.target.value);\n    e.preventDefault();\n  }\n\n  const onSelectCategoryHander = (category) => {\n    return () => {\n      setSelectedCategory(category);\n    }\n  }\n\n  const nowTime = () => {\n    const n = new Date();\n    return `${(''+n.getFullYear()).slice(-2)}${('0'+(n.getMonth()+1)).slice(-2)}${('0'+n.getDate()).slice(-2)}`;\n  }\n\n  const downloadResultJSON = (result) => {\n    const blob = new Blob([JSON.stringify(result, null, '  ')], {type: 'application/json'});\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = result.filename;\n    link.click();\n    URL.revokeObjectURL(url);\n  }\n\n  const onClickDownload = () => {\n    const r = {};\n    r.filename = `${checkerKey}-Result-${nowTime()}.json`;\n    r.date = new Date();\n    r.title = title;\n    r.category = typeList;\n    const result = JSON.parse(localStorage.getItem(localStorageKey));\n    const resultHash = Object.keys(result).reduce((a,c) => { a[c] = result[c]; return a }, {});\n    r.result = calcResult(wordList, result, typeList);\n    r.words = wordList.map( v => {\n      if (resultHash[v.word] !== 1) return { ...v, point: 0, };\n      return { ...v, point: 1, };\n    });\n    downloadResultJSON(r);\n  }\n\n  return (\n    <Container\n      title={title}\n      onClickDownload={onClickDownload}\n      colors={colors}\n    >\n      <div className=\"m-screen my-2\">\n        <canvas\n          className=\"mx-auto\"\n          ref={canvasEl}\n          width=\"320\"\n          height=\"320\"\n        ></canvas>\n      </div>\n      <div className=\"hidden md:flex justify-center my-2\">\n        <CategorySum\n          wordList={wordList}\n          label=\"全て\"\n          category=\"all\"\n          selectedCategory={selectedCategory}\n          onClick={onSelectCategoryHander('all')}\n          colors={colors}\n        />\n        {\n          typeList.map( item => {\n            return (\n              <CategorySum\n                key={item.type}\n                wordList={wordList}\n                label={item.label}\n                category={item.type}\n                selectedCategory={selectedCategory}\n                onClick={onSelectCategoryHander(item.type)}\n                colors={colors}\n              />\n            )\n          })\n        }\n      </div>\n      <div className=\"flex justify-center md:hidden\">\n        <div className=\"inline-block relative w-64\">\n          <select className=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline font-bold text-gray-700\"\n                  value={selectedCategory} onChange={onSelectCategory}\n          >\n            <option value=\"all\">全て:{ wordList.length }</option>\n            {\n              typeList.map( (item, i) => {\n                return (\n                  <option key={i} value={item.type}>{item.label}:{ wordList.filter( v => v.type === item.type ).length }</option>\n                )\n              })\n            }\n          </select>\n          <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n            <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\n          </div>\n        </div>\n      </div>\n      <p className=\"select-none text-center font-bold text-gray-700 my-4\">知っている単語のカードをクリックしてチェック！</p>\n      <div className=\"grid grid-cols-3 sm:grid-cols-5 md:grid-cols-7 lg:grid-cols-9 xl:grid-cols-10 gap-0 justify-items-center\">\n        <WordList\n          wordList={wordList}\n          category={selectedCategory}\n          categoryLabels={typeList.reduce((a, c) => {a[c.type] = c.label;return a;}, {})}\n          answer={answer}\n          onSelectHandler={onSelectHandler}\n          colors={colors}\n          subkeyword={subkeyword}\n        />\n      </div>\n    </Container>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, withRouter, } from \"react-router-dom\";\nimport ProgrammingTypeList from './categories/programming/TypeList.json';\nimport ProgrammingWordList from './categories/programming/WordList.json';\nimport DataScienceTypeList from './categories/datascience/TypeList.json';\nimport DataScienceWordList from './categories/datascience/WordList.json';\nimport WebTechTypeList from './categories/webtechnology/TypeList.json';\nimport WebTechWordList from './categories/webtechnology/WordList.json';\nimport WordsClassTool  from './pages/WordsClassTool';\nimport WordsSelfChecker from './pages/WordsSelfChecker';\n\nconst ToolPage = withRouter(WordsClassTool);\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        {\n          (process.env.NODE_ENV !== 'production')?(\n            <Route path={[\"/programming/tool/:wordType\", \"/programming/tool\"]}>\n              <ToolPage\n                category=\"programming\"\n                categoryURL=\"programming\"\n              />\n            </Route>):null\n        }\n        {\n          (process.env.NODE_ENV !== 'production')?(\n            <Route path={[\"/datascience/tool/:wordType\", \"/datascience/tool\"]}>\n                <ToolPage\n                  colors={{\n                    cardBG: 'bg-green-200',\n                    selectBG: 'bg-green-400',\n                  }}\n                  category=\"datascience\"\n                  categoryURL=\"datascience\"\n                  subkeyword=\"データサイエンス\"\n                />\n            </Route>):null\n        }\n        {\n          (process.env.NODE_ENV !== 'production')?(\n            <Route path={[\"/webtech/tool/:wordType\", \"/webtech/tool\"]}>\n                <ToolPage\n                  colors={{\n                    cardBG: 'bg-orange-200',\n                    selectBG: 'bg-orange-400',\n                  }}\n                  category=\"webtechnology\"\n                  categoryURL=\"webtech\"\n                  subkeyword=\"Web技術\"\n                />\n            </Route>):null\n        }\n        <Route path=\"/datascience\">\n          <WordsSelfChecker\n            title=\"DATASCIENCE WORDS SELF CHECKER\"\n            checkerKey=\"DSSC\"\n            wordList={DataScienceWordList}\n            typeList={DataScienceTypeList}\n            colors={{\n              cardBG: 'bg-green-200',\n              headerBG: 'bg-green-500',\n              selectBG: 'bg-green-400',\n              checkMark: '#48BB78',\n            }}\n            subkeyword=\"データサイエンス\"\n          />\n        </Route>\n        <Route path=\"/webtech\">\n          <WordsSelfChecker\n            title=\"WEBTECH WORDS SELF CHECKER\"\n            checkerKey=\"WTSC\"\n            wordList={WebTechWordList}\n            typeList={WebTechTypeList}\n            colors={{\n              cardBG: 'bg-orange-200',\n              headerBG: 'bg-orange-500',\n              selectBG: 'bg-orange-400',\n              checkMark: '#ED8936',\n            }}\n            subkeyword=\"Web技術\"\n          />\n        </Route>\n        <Route path={[\"/programming\", \"/\"]}>\n          <WordsSelfChecker\n            title=\"PROGRAMMING WORDS SELF CHECKER\"\n            checkerKey=\"PWSC\"\n            wordList={ProgrammingWordList}\n            typeList={ProgrammingTypeList}\n            subkeyword=\"プログラミング\"\n          />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
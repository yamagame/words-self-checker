{"version":3,"sources":["Storage.js","pages/WordsClassTool.js","pages/WordsSelfChecker.js","App.js","serviceWorker.js","index.js"],"names":["data","programming","type","word","datascience","webtechnology","loadType","category","a","axios","post","loadWord","saveWordType","encodeURIComponent","then","loadCheckerData","WordCell","item","colors","subkeyword","className","cardBG","style","width","label","target","href","url","encodeURI","onClick","e","stopPropagation","TypeCell","selectedType","CategorySum","wordList","selectBG","textColor","filter","v","length","TypeList","typeList","onSelectType","value","map","key","CheckMark","height","viewBox","d","fill","checkMark","stroke","strokeMiterlimit","pointerEvents","Container","title","children","onClickDownload","header","selectedCategory","select","WordCard","answer","selected","card","WordList","categoryLabels","onSelectHandler","selectedCard","i","calcResult","w","y","Object","keys","cat","forEach","labels","total","result","parseInt","checkerKey","React","useState","setSelectedCategory","setSelectedCard","filteredWordList","setFilteredWordList","setAnswer","canvasEl","useRef","chartRef","localStorageKey","renderTimeout","checkWord","localStorage","setItem","JSON","stringify","useEffect","current","clearTimeout","setTimeout","ctx","getContext","resultData","destroy","Chart","datasets","borderWidth","backgroundColor","borderColor","pointBorderWidth","pointHoverBorderWidth","pointBorderColor","pointRadius","borderJoinStyle","options","responsive","legend","display","scale","angleLines","ticks","min","max","suggestedMin","suggestedMax","fontSize","gridLines","lineWidth","circular","pointLabels","hover","axis","tooltips","callbacks","tooltipItem","index","updateChart","parse","getItem","err","listnerKeydown","findWord","findIndex","code","preventDefault","window","addEventListener","removeEventListener","onSelectCategoryHander","r","filename","n","Date","getFullYear","slice","getMonth","getDate","nowTime","date","resultHash","reduce","c","words","point","blob","Blob","URL","createObjectURL","link","document","createElement","download","click","revokeObjectURL","downloadResultJSON","ref","onChange","xmlns","withRouter","history","categoryURL","match","console","log","wordType","params","setSelectedType","wordData","setWordData","typeData","setTypeData","loadTypeData","storage","list","loadWordData","setWordType","some","push","App","programmingData","setProgrammingData","datascienceData","setDatascienceData","webtechnologyData","setWebtechnologyData","Storage","loadData","path","WordsSelfChecker","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.726aa110.chunk.js","sourcesContent":["import axios from 'axios';\nimport ProgrammingTypeList from './categories/programming/TypeList.json';\nimport ProgrammingWordList from './categories/programming/WordList.json';\nimport DataScienceTypeList from './categories/datascience/TypeList.json';\nimport DataScienceWordList from './categories/datascience/WordList.json';\nimport WebTechTypeList from './categories/webtechnology/TypeList.json';\nimport WebTechWordList from './categories/webtechnology/WordList.json';\n\nconst data = {\n  programming: {\n    type: ProgrammingTypeList,\n    word: ProgrammingWordList,\n  },\n  datascience: {\n    type: DataScienceTypeList,\n    word: DataScienceWordList,\n  },\n  webtechnology: {\n    type: WebTechTypeList,\n    word: WebTechWordList,\n  },\n}\n\nexport default {\n  loadType: async (category) => {\n    return (await axios.post(`/typeData/${category}`)).data\n  },\n  loadWord: async (category) => {\n    return (await axios.post(`/wordData/${category}`)).data\n  },\n  saveWordType: async (category, word, type) => {\n    await axios.post(`/wordType/${category}/${encodeURIComponent(word)}/${type}`).then();\n  },\n  loadCheckerData: async (category) => {\n    return data[category];\n  },\n}\n","import React from 'react';\nimport storage from '../Storage';\n\nconst WordCell = ({\n  item,\n  colors,\n  subkeyword,\n}) => {\n  const textColor = (category) => {\n    return colors.cardBG;\n  }\n  return (\n    <div className=\"relative inline-block align-middle\">\n      <div className={`flex items-center m-2 h-24 ${textColor(item)} rounded-lg shadow`} style={{ width: \"6.5rem\", }}>\n        <div className=\"block w-full text-gray-700\">\n          <p className=\"select-none absolute top-0 m-2 text-xs\">{item.label}</p>\n          <p className=\"select-none font-bold text-sm text-center\">\n            <a className=\"underline\"\n              target=\"words-self-checker\"\n              href={item.url?item.url:\"https://www.google.com/search?q=\"+encodeURI(item.word+' '+subkeyword)}\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n            >{ item.word }</a>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst TypeCell = ({\n  item,\n  selectedType,\n  onClick,\n  colors,\n}) => {\n  const textColor = () => {\n    if (selectedType === item.type) return colors.cardBG;\n    return 'bg-gray-200';\n  }\n  return (\n    <div className=\"relative inline-block align-middle\">\n      <div className={`flex items-center m-2 h-16 ${textColor()} rounded-lg shadow`} style={{ width: \"3.5rem\", }} onClick={onClick}>\n        <div className=\"block w-full text-gray-700\">\n          <p className=\"select-none font-bold text-sm text-center\">\n            { item.label }\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst CategorySum = ({\n  wordList,\n  label,\n  category,\n  onClick,\n  selectedType,\n  colors,\n}) => {\n  const textColor = (category) => {\n    return selectedType===category?`text-white ${colors.selectBG}`:'text-gray-500 bg-transparent';\n  }\n  return (\n    <div className={`select-none flex text-sm hover:${colors.selectBG} hover:text-white text-white font-bold py-1 px-2 rounded ${textColor(category)}`} onClick={onClick}>\n      <div className=\"flex-1 my-2\"> {label}:{ wordList.filter( v => (typeof(v.type) === 'undefined' && category === 'null') ||  v.type === category || category === 'all' ).length } </div>\n    </div>\n  )\n}\n\nconst TypeList = ({\n  wordList,\n  typeList,\n  selectedType,\n  onSelectType,\n  colors,\n}) => {\n  return (\n    <div className=\"flex justify-center my-2\">\n      <CategorySum\n        wordList={wordList}\n        label=\"全て\"\n        category=\"all\"\n        selectedType={selectedType}\n        onClick={() => onSelectType({ target: { value: 'all' }})}\n        colors={colors}\n      />\n      <CategorySum\n        wordList={wordList}\n        label=\"なし\"\n        category=\"null\"\n        selectedType={selectedType}\n        onClick={() => onSelectType({ target: { value: 'null' }})}\n        colors={colors}\n      />\n      {\n        typeList.map( item => {\n          return (\n            <CategorySum\n              key={item.type}\n              wordList={wordList}\n              label={item.label}\n              category={item.type}\n              selectedType={selectedType}\n              onClick={() => onSelectType({ target: { value: item.type }})}\n              colors={colors}\n            />\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default function({\n  history,\n  category,\n  categoryURL,\n  match,\n  colors= {\n    cardBG: 'bg-blue-200',\n    selectBG: 'bg-blue-500',\n  },\n  subkeyword=\"プログラミング\",\n}) {\n  console.log(match);\n  const { wordType } = match.params;\n  const [selectedType, setSelectedType] = React.useState('all');\n  const [wordData, setWordData] = React.useState([]);\n  const [typeData, setTypeData] = React.useState([]);\n\n  React.useEffect(() => {\n    setSelectedType(wordType?wordType:'all');\n  }, [wordType]);\n\n  const loadTypeData = async () => {\n    const list = await storage.loadType(category);\n    setTypeData(list);\n  }\n  const loadWordData = async () => {\n    const list = await storage.loadWord(category);\n    setWordData(list);\n  }\n  const setWordType = async (word, type) => {\n      const w = [ ...wordData ];\n      w.some( w => {\n      if (w.word === word) {\n        w.type = type;\n        return true;\n      }\n      return false;\n    })\n    setWordData(w);\n    await storage.saveWordType(category, word, type);\n  }\n\n  React.useEffect(() => {\n    loadTypeData();\n    loadWordData();\n  }, []);\n\n  const onSelectType = (e) => {\n    history.push(`/${categoryURL}/tool/${e.target.value}`);\n    setSelectedType(e.target.value);\n  }\n\n  const onClickTypeCellHandler = (word, type) => {\n    return (e) => {\n      setWordType(word, type);\n      e.preventDefault();\n    }\n  }\n\n  console.log(typeData);\n\n  return (\n    <>\n      <TypeList\n        wordList={wordData}\n        typeList={typeData}\n        selectedType={selectedType}\n        onSelectType={onSelectType}\n        colors={colors}\n      />\n      {\n        wordData.filter(w => {\n          if (selectedType === 'null') {\n            return (typeof(w.type) === 'undefined')\n          }\n          if (selectedType === 'all') return true;\n          if (selectedType === w.type) return true;\n          return false;\n        }).map( (w, i) => {\n          return (\n            <div key={w.word} className=\"block border-4\">\n              <WordCell\n                item={w}\n                colors={colors}\n                subkeyword={subkeyword}\n              />\n              {\n                typeData.map( (v, i) => (\n                  <TypeCell\n                    key={v.label}\n                    item={v}\n                    selectedType={w.type}\n                    onClick={onClickTypeCellHandler(w.word, v.type)}\n                    colors={colors}\n                  />\n                ))\n              }\n            </div>\n          )\n        })\n      }\n    </>\n  )\n}\n","import React from 'react';\nimport Chart from 'chart.js';\n\nfunction CheckMark({colors}) {\n  return (\n    <svg width=\"24px\" height=\"26px\" viewBox=\"-0.5 -0.5 44 51\">\n      <path d=\"M 0.18 34.19 C 0.63 32.5 1.77 31.08 3.31 30.3 C 4.85 29.52 6.64 29.44 8.24 30.09 C 10.57 31.24 12.37 33.26 13.27 35.72 C 17.43 23.7 23.75 12.58 31.91 2.92 C 34.22 0.78 37.46 0 40.47 0.87 C 41.23 0.99 41.89 1.51 42.19 2.24 C 42.5 2.96 42.42 3.8 41.98 4.45 C 30.89 17.2 22.64 32.24 17.81 48.54 C 14.96 50 11.59 50 8.74 48.54 C 6.59 43.67 3.7 39.17 0.18 35.21 C 0 34.89 0 34.5 0.18 34.19 Z\"\n        fill={colors.checkMark}\n        stroke={colors.checkMark}\n        strokeMiterlimit=\"10\"\n        pointerEvents=\"all\"\n      />\n    </svg>\n  )\n}\n\nfunction Container({\n  title,\n  children,\n  onClickDownload,\n  colors,\n}) {\n  return (\n    <div className=\"container mx-auto\">\n      <div className={`flex items-center justify-between flex-wrap bg-${colors.header} p-3`}>\n        <div className={`flex items-center flex-shrink-0 text-white`}>\n          <span className=\"font-semibold md:text-xl tracking-tight break-words\">{title}</span>\n        </div>\n        <div className=\"w-full block flex-grow md:flex md:items-center md:w-auto\">\n          <div className=\"text-sm md:flex-grow\"></div>\n          <div>\n            <div\n               className=\"inline-block text-sm px-4 py-2 leading-none border rounded text-white border-white hover:border-transparent hover:text-teal-500 hover:bg-white mt-4 md:mt-0\"\n               onClick={onClickDownload}\n            >Download Result</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"inset-0\">\n        { children }\n      </div>\n    </div>\n  )\n}\n\nconst CategorySum = ({\n  wordList,\n  label,\n  category,\n  onClick,\n  selectedCategory,\n  colors,\n}) => {\n  const textColor = (category) => {\n    return selectedCategory===category?`text-white bg-${colors.select}`:'text-gray-500 bg-transparent';\n  }\n  return (\n    <div className={`select-none flex text-sm hover:bg-${colors.select} hover:text-white text-white font-bold py-1 px-2 rounded ${textColor(category)}`} onClick={onClick}>\n      <div className=\"flex-1 my-2\"> {label}:{ wordList.filter( v => v.type === category || category === 'all' ).length } </div>\n    </div>\n  )\n}\n\nconst WordCard = ({\n  item,\n  answer,\n  onClick,\n  colors,\n  subkeyword,\n  selected,\n}) => {\n  const textColor = () => {\n    if (answer === 1) return `bg-${colors.card}`;\n    return 'bg-gray-200';\n  }\n  const selectColor = () => {\n    if (selected) return `border-${colors.select}`;\n    if (answer === 1) return `border-${colors.card}`;\n    return 'border-gray-200';\n  }\n  return (\n    <div className=\"relative inline-block align-middle\">\n      <div className={`${selectColor()} border-4 flex items-center m-2 h-24 ${textColor()} rounded-lg shadow`} style={{ width: \"6.5rem\", }} onClick={onClick}>\n        <div className=\"block w-full text-gray-700\">\n          <p className=\"select-none absolute top-0 m-2 text-xs\">{item.label}</p>\n          <p className=\"select-none font-bold text-sm text-center\">\n            <a className=\"underline\"\n              target=\"words-self-checker\"\n              href={item.url?item.url:\"https://www.google.com/search?q=\"+encodeURI(item.word+` ${subkeyword}`)}\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n            >{ item.word }</a>\n          </p>\n          {\n            (answer === 1)?(<p className=\"select-none absolute bottom-0 right-0 m-4\">\n              <CheckMark colors={colors} />\n            </p>):null\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst WordList = ({\n  wordList,\n  answer,\n  category,\n  categoryLabels,\n  onSelectHandler,\n  colors,\n  subkeyword,\n  selectedCard,\n}) => {\n  return (\n    <>\n    {\n      wordList.map( (v, i) => {\n        const item = { ...v };\n        item.label = categoryLabels[item.type];\n        return (\n          <WordCard\n            key={v.word}\n            item={item}\n            answer={answer[v.word]}\n            onClick={onSelectHandler(v)}\n            colors={colors}\n            subkeyword={subkeyword}\n            selected={selectedCard==v.word}\n          />\n        )\n      })\n    }\n    </>\n  )\n}\n\nconst calcResult = (w, answer, typeList) => {\n  const y = Object.keys(answer).filter( a => answer[a] === 1 );\n  const sum = (category) => {\n    return w.filter( v => v.type === category ).length\n  }\n  const cat = {};\n  w.forEach( v => { cat[v.word] = v.type } );\n  const labels = typeList.map( v => v.label );\n  const keys = typeList.map( v => v.type );\n  const total = keys.map( key => sum(key) );\n  const result = {};\n  keys.forEach( key => {\n    result[key] = 0;\n  })\n  y.forEach( w => {\n    if (!result[cat[w]]) result[cat[w]] = 0;\n    result[cat[w]] ++;\n  });\n  return {\n    labels,\n    data: keys.map( (key, i) => parseInt(result[key] * 100 / total[i]) ),\n  }\n}\n\nexport default function({\n  wordList,\n  typeList,\n  checkerKey,\n  title,\n  colors= {\n    card: 'blue-200',\n    header: 'blue-500',\n    select: 'blue-500',\n    checkMark: '#4299E1',\n  },\n  subkeyword=\"プログラミング\",\n}) {\n  const [selectedCategory, setSelectedCategory] = React.useState('all');\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [filteredWordList, setFilteredWordList] = React.useState([]);\n  const [answer, setAnswer] = React.useState({});\n  const canvasEl = React.useRef(null);\n  const chartRef = React.useRef(null);\n  const localStorageKey = `self-checker-answer:${checkerKey}`;\n  const renderTimeout = React.useRef(null);\n\n  const updateChart = (answer, wordList, typeList) => {\n    const ctx = canvasEl.current.getContext('2d');\n\n    const resultData = calcResult(wordList, answer, typeList);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n    }\n    chartRef.current = new Chart(ctx, {\n      type: 'radar',\n      data: {\n        labels: resultData.labels,\n        datasets: [{\n          data: resultData.data,\n          borderWidth: 4,\n          backgroundColor: `${colors.checkMark}40`,\n          borderColor: colors.checkMark,\n          pointBorderWidth: 2,\n          pointHoverBorderWidth: 2,\n          pointBorderColor: 'white',\n          pointRadius: 4,\n          borderJoinStyle: 'round',\n          // label: 'hello',\n        }]\n      },\n      options: {\n        responsive: false,\n        legend: {\n          display: false,\n        },\n        scale: {\n          angleLines: {\n            display: false,\n          },\n          ticks: {\n            min: 0,\n            max: 100,\n            suggestedMin: 0,\n            suggestedMax: 50,\n            fontSize: 18,\n          },\n          gridLines: {\n            lineWidth: 2,\n            circular: false,\n          },\n          pointLabels: {\n            fontSize: 15,\n          },\n        },\n        hover: {\n          axis: 'index'\n        },\n        tooltips: {\n          callbacks: {\n            title: function(tooltipItem, data) {\n              return resultData.labels[tooltipItem[0].index];\n            },\n          },\n        },\n      }\n    });\n  }\n\n  const checkWord = (word) => {\n    const a = { ...answer };\n    if (!a[word]) {\n      a[word] = 1;\n    } else {\n      a[word] = 0;\n    }\n    localStorage.setItem(localStorageKey, JSON.stringify(a));\n    setAnswer(a);\n  }\n\n  React.useEffect(() => {\n    setFilteredWordList(wordList.filter(v => {\n      if (selectedCategory === 'null') {\n          return (typeof(v.type) === 'undefined')\n      }\n      if (selectedCategory === 'all') return true;\n      if (selectedCategory === v.type) return true;\n      return false;\n    }));\n  }, [wordList, selectedCategory]);\n\n  React.useEffect(() => {\n    if (renderTimeout.current) {\n      clearTimeout(renderTimeout.current);\n    }\n    renderTimeout.current = setTimeout(() => {\n      updateChart(answer, wordList, typeList);\n      renderTimeout.current = null;\n    }, 1000);\n  }, [answer, wordList, typeList]);\n\n  React.useEffect(() => {\n    try {\n      const a = JSON.parse(localStorage.getItem(localStorageKey));\n      setAnswer(a?a:{});\n    } catch(err) {\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const listnerKeydown = (e) => {\n      const findWord = (word, d) => {\n        if (filteredWordList.length == 0) return null;\n        let index = filteredWordList.findIndex( w => w.word === word);\n        index += d;\n        if (index < 0) index = filteredWordList.length-1;\n        if (index >= filteredWordList.length) index = 0;\n        return filteredWordList[index].word;\n        \n      }\n      if (e.code === 'ArrowRight') {\n        e.preventDefault();\n        setSelectedCard(findWord(selectedCard,  1));\n      }\n      if (e.code === 'ArrowLeft') {\n        e.preventDefault();\n        setSelectedCard(findWord(selectedCard, -1));\n      }\n      if (e.code === 'Space') {\n        e.preventDefault();\n        checkWord(selectedCard);\n        setSelectedCard(findWord(selectedCard,  1));\n      }\n    }\n    window.addEventListener('keydown', listnerKeydown)\n    return () => {\n      window.removeEventListener('keydown', listnerKeydown);\n    }\n  }, [filteredWordList, selectedCard, answer]);\n\n  const onSelectHandler = (item) => {\n    return (e) => {\n      setSelectedCard(item.word);\n      checkWord(item.word);\n    }\n  }\n\n  const onSelectCategory = (e) => {\n    setSelectedCategory(e.target.value);\n    e.preventDefault();\n  }\n\n  const onSelectCategoryHander = (category) => {\n    return () => {\n      setSelectedCategory(category);\n    }\n  }\n\n  const nowTime = () => {\n    const n = new Date();\n    return `${(''+n.getFullYear()).slice(-2)}${('0'+(n.getMonth()+1)).slice(-2)}${('0'+n.getDate()).slice(-2)}`;\n  }\n\n  const downloadResultJSON = (result) => {\n    const blob = new Blob([JSON.stringify(result, null, '  ')], {type: 'application/json'});\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = result.filename;\n    link.click();\n    URL.revokeObjectURL(url);\n  }\n\n  const onClickDownload = () => {\n    const r = {};\n    r.filename = `${checkerKey}-Result-${nowTime()}.json`;\n    r.date = new Date();\n    r.title = title;\n    r.category = typeList;\n    const result = JSON.parse(localStorage.getItem(localStorageKey));\n    const resultHash = Object.keys(result).reduce((a,c) => { a[c] = result[c]; return a }, {});\n    r.result = calcResult(wordList, result, typeList);\n    r.words = wordList.map( v => {\n      if (resultHash[v.word] !== 1) return { ...v, point: 0, };\n      return { ...v, point: 1, };\n    });\n    downloadResultJSON(r);\n  }\n\n  return (\n    <Container\n      title={title}\n      onClickDownload={onClickDownload}\n      colors={colors}\n    >\n      <div className=\"m-screen my-2\">\n        <canvas\n          className=\"mx-auto\"\n          ref={canvasEl}\n          width=\"320\"\n          height=\"320\"\n        ></canvas>\n      </div>\n      <div className=\"hidden md:flex justify-center my-2\">\n        <CategorySum\n          wordList={wordList}\n          label=\"全て\"\n          category=\"all\"\n          selectedCategory={selectedCategory}\n          onClick={onSelectCategoryHander('all')}\n          colors={colors}\n        />\n        {\n          typeList.map( item => {\n            return (\n              <CategorySum\n                key={item.type}\n                wordList={wordList}\n                label={item.label}\n                category={item.type}\n                selectedCategory={selectedCategory}\n                onClick={onSelectCategoryHander(item.type)}\n                colors={colors}\n              />\n            )\n          })\n        }\n      </div>\n      <div className=\"flex justify-center md:hidden\">\n        <div className=\"inline-block relative w-64\">\n          <select className=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline font-bold text-gray-700\"\n                  value={selectedCategory} onChange={onSelectCategory}\n          >\n            <option value=\"all\">全て:{ wordList.length }</option>\n            {\n              typeList.map( (item, i) => {\n                return (\n                  <option key={i} value={item.type}>{item.label}:{ wordList.filter( v => v.type === item.type ).length }</option>\n                )\n              })\n            }\n          </select>\n          <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n            <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\n          </div>\n        </div>\n      </div>\n      <p className=\"select-none text-center font-bold text-gray-700 mt-4\">知っている単語のカードをクリックしてチェック！</p>\n      <div className=\"block text-center text-gray-700 font-bold\">({ wordList.reduce( (a,v) => (answer[v.word] === 1 ? a+1: a) , 0) } Point) </div>\n      <div className=\"grid grid-cols-3 sm:grid-cols-5 md:grid-cols-7 lg:grid-cols-9 xl:grid-cols-10 gap-0 justify-items-center\">\n        <WordList\n          wordList={filteredWordList}\n          category={selectedCategory}\n          categoryLabels={typeList.reduce((a, c) => {a[c.type] = c.label;return a;}, {})}\n          answer={answer}\n          onSelectHandler={onSelectHandler}\n          colors={colors}\n          subkeyword={subkeyword}\n          selectedCard={selectedCard}\n        />\n      </div>\n    </Container>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, withRouter, } from \"react-router-dom\";\nimport WordsClassTool  from './pages/WordsClassTool';\nimport WordsSelfChecker from './pages/WordsSelfChecker';\nimport Storage from './Storage';\n\nconst ToolPage = withRouter(WordsClassTool);\n\nfunction App() {\n  const [programmingData, setProgrammingData] = React.useState({type: [], word: []});\n  const [datascienceData, setDatascienceData] = React.useState({type: [], word: []});\n  const [webtechnologyData, setWebtechnologyData] = React.useState({type: [], word: []});\n\n  React.useEffect(() => {\n    async function loadData() {\n      setProgrammingData(await Storage.loadCheckerData('programming'));\n      setDatascienceData(await Storage.loadCheckerData('datascience'));\n      setWebtechnologyData(await Storage.loadCheckerData('webtechnology'));\n    }\n    loadData();\n  }, []);\n  \n  return (\n    <Router>\n      <Switch>\n        {\n          (process.env.NODE_ENV !== 'production')?(\n            <Route path={[\"/programming/tool/:wordType\", \"/programming/tool\"]}>\n              <ToolPage\n                category=\"programming\"\n                categoryURL=\"programming\"\n              />\n            </Route>):null\n        }\n        {\n          (process.env.NODE_ENV !== 'production')?(\n            <Route path={[\"/datascience/tool/:wordType\", \"/datascience/tool\"]}>\n                <ToolPage\n                  colors={{\n                    cardBG: 'bg-green-200',\n                    selectBG: 'bg-green-400',\n                  }}\n                  category=\"datascience\"\n                  categoryURL=\"datascience\"\n                  subkeyword=\"データサイエンス\"\n                />\n            </Route>):null\n        }\n        {\n          (process.env.NODE_ENV !== 'production')?(\n            <Route path={[\"/webtech/tool/:wordType\", \"/webtech/tool\"]}>\n                <ToolPage\n                  colors={{\n                    cardBG: 'bg-orange-200',\n                    selectBG: 'bg-orange-400',\n                  }}\n                  category=\"webtechnology\"\n                  categoryURL=\"webtech\"\n                  subkeyword=\"Web技術\"\n                />\n            </Route>):null\n        }\n        <Route path=\"/datascience\">\n          <WordsSelfChecker\n            title=\"DATASCIENCE WORDS SELF CHECKER\"\n            checkerKey=\"DSSC\"\n            wordList={datascienceData.word}\n            typeList={datascienceData.type}\n            colors={{\n              card: 'green-200',\n              header: 'green-500',\n              select: 'green-400',\n              checkMark: '#48BB78',\n            }}\n            subkeyword=\"データサイエンス\"\n          />\n        </Route>\n        <Route path=\"/webtech\">\n          <WordsSelfChecker\n            title=\"WEBTECH WORDS SELF CHECKER\"\n            checkerKey=\"WTSC\"\n            wordList={webtechnologyData.word}\n            typeList={webtechnologyData.type}\n            colors={{\n              card: 'orange-200',\n              header: 'orange-500',\n              select: 'orange-400',\n              checkMark: '#ED8936',\n            }}\n            subkeyword=\"Web技術\"\n          />\n        </Route>\n        <Route path={[\"/programming\", \"/\"]}>\n          <WordsSelfChecker\n            title=\"PROGRAMMING WORDS SELF CHECKER\"\n            checkerKey=\"PWSC\"\n            wordList={programmingData.word}\n            typeList={programmingData.type}\n            subkeyword=\"プログラミング\"\n          />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}